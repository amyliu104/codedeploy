sudo: required

language: php
php:
- '7.1.9'

# services:
#   - docker

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
    - ZIP_FILE="php-web-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

    # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
    # before install travis , first install ruby & gem
    # $ gem install travis
    # $ travis encrypt SOMEVAR="secretvalue"

    # AWS_ACCESS_KEY_ID_DEV
    - secure: ""
    # AWS_SECRET_ACCESS_KEY_DEV
    - secure: ""
    # AWS_ACCESS_KEY_ID_STG
    #    - secure: ""
    # AWS_SECRET_ACCESS_KEY_STG
    #    - secure: ""
    # AWS_ACCESS_KEY_ID_PROD , value : AKI....QMQ
    - secure: "HIyR7ZzWFeroG0Z6BbzVh4VHLYpBf1Wf2U63ZhClkVQlH7tYWmm4WkfRpXEiKosmST/3mUrN4otTiG7+sHBjJWHIJhKDV7pB5ZQ0BGwD0XfhJBdwvo0UIuXZLXAFVR4TVCnWxiONKG2cC/RxOBH4GffwJcHl5TdcEq3KejdD2Qab7muaA17v8zVdA6b8K2xxslgzz/tpHLfVpwkF4zQ3ajMvgHtvzD1ANIj5pbVSRYK2aC5zlpvOB6yt7sCMNiFZtSL5evYbBvgLG45BV1rUVIt5ovt/RY2lvCgRQ4TFZFuxC3f1evV9ny8wIsrxfPPvIdiiRlrpTxHtX4XugXnDPZZHF6atv+RHopCS95Z777nCq2FPMCfY1dEuM1VpOQfwo+iBSbev6qE6hg+IAWfycG8E6NcfvUTffMYvPfa2umbkma9emIDvhwGo8kLTgVNIJ95CD171w62RomCkcQex4BYOcbwkNjsNCXh/mIKodbtOpiWVKTRprRlt/anNIqIW2KKg0hZRxIWZAKvNyDlKnCYJLOa46VarHB40DqtzK+C+kGoWJKJn+jjN0deekVTotOJjaFeixFTmaFMSXQFYnaL8LcMjv5z9ThLuP7QDIcl9wCT9+B3Kkk2WXKwcECp/UJIXCfRrnMhkm9dA9jlaIr619GYECuHtskYhCX/2dj8="
    # AWS_SECRET_ACCESS_KEY_PROD
    - secure: "prfHd/vGyYRPZhab1FYG9TAbHcht+z5onH4HWA1q5cOxZuINRsmkjPMI5OvnpK5TuPx1PvFTUyJ8m2C6lPkx4Phj/k5JfBsNitUD/qD+8O5V0HHzch1e2L/W425NliPcz8F02yR/8oLldCSJRTAYU+Gq+3Jh1p6uDrIdmkYOazEbY+UiO1OtY4jeqHZ5UY0WAoAo8k57praY1lG5hfT6zsVV5fPNBIpY3Pd2nzuK9cDRoDsHCNEyADyiTZ5TJho3Yzq8gYZP7KLzAtpvPp/gQkTUAoI0QUbDqeoa/W5Cx46TRJ2OWQQsqu7Bten+MblJxoCFI6dBZC3Uqfjssfyq3DT+KLkhT9R+N36/o4RpeFxujTCTQqe9u2ySizJrz81RZMGpDjxc9ZCuHuG1qMkMuJBOJQVwkJsWDkg2nLnoGQcBTX6ut492g1b6b63z8twTR2mRQwByIddE8gXwdhBCIjTYf9pz/5Xjhtbt7iQjy7Wdq/bSHReVQOnKqzGw4vXrPMaqnYC2/DM/mnRCqiM307IXb+4tQOMvg0nfMtoY7hsIacuzbrY4BuTA1vGv18/3StYs0Knosj0XilQSEvgf7DH1C2V3Ufyd6RP9sDh5AHyfkHVYp5Nn+Vcoel79yPsEG2aVy4cxTGTdNc1RIPtJLdROKFo6Yaa9OXewbZTo7Xw="

    # global variables
    - AWS_ACCESS_KEY_ID=''
    - AWS_SECRET_ACCESS_KEY=''
    - AWS_REGION='ap-northeast-1'
    - S3_BUCKET=''
    - S3_FOLDER='demo'
    - CODEDEPLOY_APP_NAME=''
    - CODEDEPLOY_GROUP=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  # slack:
  #   secure: "nUYjAZGN+uymXquFddUgPkbD/06atgwjWBRINpn3Hgq54+iJ8mSKJ5jSUaKUV4TCaQkwwv8+8GhwGTYeTkPq6/UBGQWeIVgfhzN0iXfjjhaBu0VhWzzeLfDFbD6ok0XRYdXYVnu3G3il7iXNSbCMH8jwsnrNvZNNEDovNxMA1LmPJ5v6Gg/+kGrngxYW0lIl/0+81TEBaVKo1KeIaEirRzIlN15tTNC6t3o9zV1dXaAE2H6ZbJLYj+NpsPCPYgjUf1seMBRCrMbTKcUu9yf2jwxXqZigtdmTAW5EZGro1ESv/v2kCnMmL5bmuDRizRw7CCnAANJQdJ3jVzVGK289+S/AqdcjGMYQxFRq/iyi4T6BZIbrHOTnKWwGq18djrEFxEysL6AC1rEDg7MTw2uQpiUAFIJff3PnXLEjJbKB/DR9zn3oLij4bxJ4CdnYwxZZvQO1zhQj2GhTzOYZ/G+DW3auuQI2ufVYaAiJf9NLoYLa1XXOyChAJhV3LEnZO8x78IRxwAmQKm/K6sTBIzXZXdb/heKCibnAEYUv7ZsKf8JzIKcv0nLreARqjBoUH181O+zhcjIdJKXmloQ67lUbtOFZD6jPQ1K/W1JZoAWcjX24g1VaApYPbMJDs8hMfZNFO/s52J/UQ3zy9WWUQK6Vp1AZgqErXEqO2+3MLh/wOhI="

cache:
  directories:
  - $COMPOSER_CACHE_DIR
  - $HOME/.composer/cache




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
  - set -e
  - echo `date +"%Y-%m-%d %H:%M:%S"`
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == "dev" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "staging" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "master" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
      S3_BUCKET='lab-bucket-demo';
      CODEDEPLOY_APP='demo';
      CODEDEPLOY_GROUP='ec2-master';
    fi


# put testing scripts here
script:
- echo 'script step...'

before_deploy:
- cd "$TRAVIS_BUILD_DIR";
  mkdir "$TRAVIS_BUILD_DIR/zip";
  zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *


deploy:
- provider: S3
  access_key_id: &aws_access_key $AWS_ACCESS_KEY_ID
  secret_access_key: &aws_secret_key
    secure: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  upload-dir: $S3_FOLDER
  skip_cleanup: true
  on:
    all_branches: true

- provider: codedeploy
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  region: $AWS_REGION
  bucket: $S3_BUCKET
  key: $S3_FOLDER/$ZIP_FILE
  bundle_type: zip
  application: $CODEDEPLOY_APP
  deployment_group: $CODEDEPLOY_GROUP
  wait-until-deployed: true
  on:
    all_branches: true
