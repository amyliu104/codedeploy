sudo: required

language: php
php:
- '7.1.9'

# services:
#   - docker

branches:
  only:
  - master

# travis runtime environment from here or settings. : https://docs.travis-ci.com/user/environment-variables/
env:
  global:
    - ZIP_FILE="php-web-$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip"

    # travis-ci secure doc : https://docs.travis-ci.com/user/encryption-keys/
    # before install travis , first install ruby & gem
    # $ gem install travis
    # $ travis encrypt SOMEVAR="secretvalue"

    # AWS_ACCESS_KEY_ID_DEV
    - secure: ""
    # AWS_SECRET_ACCESS_KEY_DEV
    - secure: ""
    # AWS_ACCESS_KEY_ID_STG
    #    - secure: ""
    # AWS_SECRET_ACCESS_KEY_STG
    #    - secure: ""
    # AWS_ACCESS_KEY_ID_PROD , value : AKI....QMQ
    - secure: "IQzArnNX273ldZkCWYwL+OfMtVFF7Qa2E2zW/vtMLJ3L1ze7FFcg7DcKAyh6DJZAi7rEuV5dKPGS1yg4MYSa8tA1LiwvH/c0SVANH1i9EB7k6jDKEXlKBuXYygqHKg19RCR6zEM7bzxRzm5M51pkAhN/hCrx0Jvy/8rpACRBMZTC4C9aK5u+QbHcRc6Knxheoc0IcVTAU8pmef/KGdHKVrWe8IjFR/U1AjRWwU5/CG/v+8KT7iLubCyG/HxunBGt9kFlmMkOUTbe/qfsfdlrGQqBUEydsvQ24zh8a7jZGz9m6RqIgQsXAOeE+hP0a8Wlz3GICdUGlnKybvKx7VqwzZzjf/Ka8KK1ON6BGqVr+YrBh9h/WnULDS/rH9Py+kL6swp6ywOqqgrOpUh9LaLi9LxcK/lacRCArhjATq8A4p3bsgSsOy9SeinfgqseJvNlgPMiPvkhQUEf0xyl2Np8ilsurauvdOPtk1w3H0/nIF7BsKtem0UIt3lxRto03TKPJsAPaVRrQdobDxC+q5axazYOOzJr4gAoKUNaSCg0Y4D9JSD99W2kNolsWpg8Dbv6xK1POWIKttsVeyY1XCGA9+GZ5mPElYxpRRqidVnqcmVFRZiusyyh+KuO41ivVmaL7ot0ssxfajZ86ylK7XLVtiR0HINuOSpkXlO5W/2WWsc="
    # AWS_SECRET_ACCESS_KEY_PROD
    - secure: "Zg6pTS+2CIfaiYKM2jF8rlua2M7sDKsfpI0t8J+9jlbmHKzkWR2KAbX4AQPmj1do20FFlXObyEO9XD+bhvNcKMZ/x17VpUkODxAG49bxRW3V1QKspKoSBjMB0d6n9QJOiOXiXId+HJF0DwBVF1ruDPgSnHbyUu4h1M4IHZzU/p7vAEyHb5vkL8haAI9GFFLFELH62M4FJ80eHE46AgEo9YKwQ4fnRfceXeEwsmG6nTg9UW1CyXVqMfFyyCcsu8tw5RzTqdudpplXe2feAPM8j1fQ/dJX4F8aE4lf77cQV95j6/EIal+LfLmHDhjOaRrszCAnnjReK79EJYCuftucla6RzA5vJeOIDiSG7hF+HLgYpGkSioPt2YYWcowVHXDdjiHsQbeXmvtPgPkIB55trmgNY3ZGHb9sGqVmhlHIYTPjpS2PEJ8iaMBNON1JWmBThZC7vV8w1+t/LqyFbQkGmNuf3BUDSNMyHDzXKY6lbRuA1rdBisL5oIPbynZ+NRs2yEYBqiFsFhJ65NqmsHumpGykz7jN3yC+F/Xk5RNz6uYb85yMe9awsPHjkWGNxIsy4YXmOjH8eSK8EfotPeHba5lWPaB/OZeSs4f8EK5EHIg9cb2G23lm9Qi6981D+32uOluKgvpVD50eN6LhZQblicmQmVy6PDRPc55RESI6ie8="

    # global variables
    - AWS_ACCESS_KEY_ID=''
    - AWS_SECRET_ACCESS_KEY=''
    - AWS_REGION='ap-northeast-1'
    - S3_BUCKET=''
    - S3_FOLDER='demo'
    - CODEDEPLOY_APP_NAME=''
    - CODEDEPLOY_GROUP=''


# notification - https://docs.travis-ci.com/user/notifications
# notifications:
#   email:
#     recipients:
#       - one@example.com
#       - other@example.com
#     on_success: never # default: change
#     on_failure: always # default: always
# integration to slack , setup on slack travis-ci app
notifications:
  email:
    on_failure: always
    on_success: never
  # slack:
  #   secure: "nUYjAZGN+uymXquFddUgPkbD/06atgwjWBRINpn3Hgq54+iJ8mSKJ5jSUaKUV4TCaQkwwv8+8GhwGTYeTkPq6/UBGQWeIVgfhzN0iXfjjhaBu0VhWzzeLfDFbD6ok0XRYdXYVnu3G3il7iXNSbCMH8jwsnrNvZNNEDovNxMA1LmPJ5v6Gg/+kGrngxYW0lIl/0+81TEBaVKo1KeIaEirRzIlN15tTNC6t3o9zV1dXaAE2H6ZbJLYj+NpsPCPYgjUf1seMBRCrMbTKcUu9yf2jwxXqZigtdmTAW5EZGro1ESv/v2kCnMmL5bmuDRizRw7CCnAANJQdJ3jVzVGK289+S/AqdcjGMYQxFRq/iyi4T6BZIbrHOTnKWwGq18djrEFxEysL6AC1rEDg7MTw2uQpiUAFIJff3PnXLEjJbKB/DR9zn3oLij4bxJ4CdnYwxZZvQO1zhQj2GhTzOYZ/G+DW3auuQI2ufVYaAiJf9NLoYLa1XXOyChAJhV3LEnZO8x78IRxwAmQKm/K6sTBIzXZXdb/heKCibnAEYUv7ZsKf8JzIKcv0nLreARqjBoUH181O+zhcjIdJKXmloQ67lUbtOFZD6jPQ1K/W1JZoAWcjX24g1VaApYPbMJDs8hMfZNFO/s52J/UQ3zy9WWUQK6Vp1AZgqErXEqO2+3MLh/wOhI="

cache:
  directories:
  - $COMPOSER_CACHE_DIR
  - $HOME/.composer/cache




# build lifecycle - https://docs.travis-ci.com/user/customizing-the-build/
# (OPTIONAL) Install apt addons
# (OPTIONAL) Install cache components
# before_install
# install
# before_script
# script
# (OPTIONAL) before_cache (for cleaning up cache)
# after_success or after_failure
# (OPTIONAL) before_deploy
# (OPTIONAL) deploy
# (OPTIONAL) after_deploy
# after_script

# set -e : when error stop build.
before_install:
  - set -e
  - echo `date +"%Y-%m-%d %H:%M:%S"`
  - echo $TRAVIS_BRANCH
  - if [[ $TRAVIS_BRANCH == "dev" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEV;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEV;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "staging" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_STG;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_STG;
      S3_BUCKET='';
      CODEDEPLOY_APP='';
      CODEDEPLOY_GROUP='';
    fi
  - if [[ $TRAVIS_BRANCH == "master" ]]; then
      AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD;
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD;
      S3_BUCKET='lab-bucket-demo';
      CODEDEPLOY_APP='demo';
      CODEDEPLOY_GROUP='ec2-master';
    fi


# put testing scripts here
script:
- echo 'script step...'

before_deploy:
- cd "$TRAVIS_BUILD_DIR";
  mkdir "$TRAVIS_BUILD_DIR/zip";
  zip -r "$TRAVIS_BUILD_DIR/zip/$ZIP_FILE" *


deploy:
- provider: S3
  access_key_id: &aws_access_key $AWS_ACCESS_KEY_ID
  secret_access_key: &aws_secret_key
    secure: $AWS_SECRET_ACCESS_KEY
  region: $AWS_REGION
  local_dir: $TRAVIS_BUILD_DIR/zip
  bucket: $S3_BUCKET
  upload-dir: $S3_FOLDER
  skip_cleanup: true
  on:
    all_branches: true

- provider: codedeploy
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  region: $AWS_REGION
  bucket: $S3_BUCKET
  key: $S3_FOLDER/$ZIP_FILE
  bundle_type: zip
  application: $CODEDEPLOY_APP
  deployment_group: $CODEDEPLOY_GROUP
  wait-until-deployed: true
  on:
    all_branches: true
